shiny::runApp()
runApp()
runApp()
runApp()
runApp()
#Read stock data from csv file
stock_FB<-read.csv("FB.csv")
stock_AAPL<-read.csv("AAPL.csv")
stock_AMZN<-read.csv("AMZN.csv")
stock_NFLX<-read.csv("NFLX.csv")
stock_GOOG<-read.csv("GOOG.csv")
stock_AEP<-read.csv("AEP.csv")
stock_SRE<-read.csv("SRE.csv")
stock_all<-read.csv("long_return.csv")
ret_NVDA<- stock_all $NVDA
ret_AAPL<- stock_all $AAPL
ret_AMZN<- stock_all $AMZN
ret_RPD<- stock_all $RPD
ret_GOOG<- stock_all $GOO
ret_SPLK<- stock_all $SPLK
ret_PYPL<- stock_all $PYP
ret_SNPS<- stock_all $SNPS
ret_MU<- stock_all $MU
ret_MSFT<- stock_all $MSFT
DataFrame<-data.frame(Name=c("NVDA","AAPL","AMZN","RPD","GOOG","SPLK","PYPL","SNPS","MU","MSFT"))
#Compute sample mean
mean_NVDA<-mean(ret_NVDA)
mean_AAPL<-mean(ret_AAPL)
mean_AMZN<-mean(ret_AMZN)
mean_RPD<-mean(ret_RPD)
mean_GOOG<-mean(ret_GOOG)
mean_SPLK<-mean(ret_SPLK)
mean_PYPL<-mean(ret_PYPL)
mean_SNPS<-mean(ret_SNPS)
mean_MU<-mean(ret_MU)
mean_MSFT<-mean(ret_MSFT)
DataFrame<-within(DataFrame,{
Mean<- c(mean_NVDA,mean_AAPL,mean_AMZN,mean_RPD,mean_GOOG,mean_SPLK,mean_PYPL,mean_SNPS,mean_MU,mean_MSFT)})
#Compute sample variance
var_NVDA<-var(ret_NVDA)
var_AAPL<-var(ret_AAPL)
var_AMZN<-var(ret_AMZN)
var_RPD<-var(ret_RPD)
var_GOOG<-var(ret_GOOG)
var_SPLK<-var(ret_SPLK)
var_PYPL<-var(ret_PYPL)
var_SNPS<-var(ret_SNPS)
var_MU<-var(ret_MU)
var_MSFT<-var(ret_MSFT)
DataFrame<-within(DataFrame,{
Var<- c(var_NVDA,var_AAPL,var_AMZN,var_RPD,var_GOOG,var_SPLK,var_PYPL,var_SNPS,var_MU,var_MSFT)})
#Compute sample deviation
std_NVDA<-sd(ret_NVDA)
std_AAPL<-sd(ret_AAPL)
std_AMZN<-sd(ret_AMZN)
std_RPD<-sd(ret_RPD)
std_GOOG<-sd(ret_GOOG)
std_SPLK<-sd(ret_SPLK)
std_PYPL<-sd(ret_PYPL)
std_SNPS<-sd(ret_SNPS)
std_MU<-sd(ret_MU)
std_MSFT<-sd(ret_MSFT)
DataFrame<-within(DataFrame,{
Std<- c(std_NVDA,std_AAPL,std_AMZN,std_RPD,std_GOOG,std_SPLK,std_PYPL,std_SNPS,std_MU,std_MSFT)})
mean_Twoside_ci<-function(x,alpha=0.05,n=252){
left<-mean(x)-qt(1-alpha/2,n-1)*sd(x)/sqrt(n)
right<-mean(x)+qt(1-alpha/2,n-1)*sd(x)/sqrt(n)
ans<-c(paste("[",as.character.numeric_version(left),",",as.character.numeric_version(right),"]"))
}
mean_ci_NVDA<-mean_Twoside_ci(ret_NVDA)
mean_ci_AAPL<-mean_Twoside_ci(ret_AAPL)
mean_ci_AMZN<-mean_Twoside_ci(ret_AMZN)
mean_ci_RPD<-mean_Twoside_ci(ret_RPD)
mean_ci_GOOG<-mean_Twoside_ci(ret_GOOG)
mean_ci_SPLK<-mean_Twoside_ci(ret_SPLK)
mean_ci_PYPL<-mean_Twoside_ci(ret_PYPL)
mean_ci_SNPS<-mean_Twoside_ci(ret_SNPS)
mean_ci_MU<-mean_Twoside_ci(ret_MU)
mean_ci_MSFT<-mean_Twoside_ci(ret_MSFT)
DataFrame<-within(DataFrame,{
Mean_ci<- c(mean_ci_NVDA,mean_ci_AAPL,mean_ci_AMZN,mean_ci_RPD,mean_ci_GOOG,mean_ci_SPLK,mean_ci_PYPL,mean_ci_SNPS,mean_ci_MU,mean_ci_MSFT)})
#compute 95% two-sided confidence interval for variance
var_Twoside_CI<-function(x,alpha=0.05,n=985){
left<-(n-1)*var(x)/qchisq(1-alpha/2,n-1)
right<-(n-1)*var(x)/qchisq(alpha/2,n-1)
ans<-c(paste("[",as.character.numeric_version(left),",",as.character.numeric_version(right),"]"))
}
var_ci_NVDA<-var_Twoside_CI(ret_NVDA)
var_ci_AAPL<-var_Twoside_CI(ret_AAPL)
var_ci_AMZN<-var_Twoside_CI(ret_AMZN)
var_ci_RPD<-var_Twoside_CI(ret_RPD)
var_ci_GOOG<-var_Twoside_CI(ret_GOOG)
var_ci_SPLK<-var_Twoside_CI(ret_SPLK)
var_ci_SNPS<-var_Twoside_CI(ret_SNPS)
var_ci_PYPL<-var_Twoside_CI(ret_PYPL)
var_ci_MU<-var_Twoside_CI(ret_MU)
var_ci_MSFT<-var_Twoside_CI(ret_MSFT)
DataFrame<-within(DataFrame,{
Var_ci<- c(var_ci_NVDA,var_ci_AAPL,var_ci_AMZN,var_ci_RPD,var_ci_GOOG,var_ci_SPLK,var_ci_PYPL,var_ci_SNPS,var_ci_MU,var_ci_MSFT)})
#Perform regressions of the log-returns on time
t<-c(1:985)
plot(ret_NVDA ~ t,bty="l",pch=20)
regression_NVDA<-lm(ret_NVDA ~ t)
intercept_NVDA <-summary(regression_NVDA)$ coefficients[,1][1]
coef_NVDA <-summary(regression_NVDA)$ coefficients[,1][2]
r_square_NVDA <-summary(regression_NVDA)$ r.squared
abline(regression_NVDA, lty=1, lwd=2)
plot(resid(regression_NVDA))
plot(ret_AAPL ~ t,bty="l",pch=20)
regression_AAPL<-lm(ret_AAPL ~ t)
intercept_AAPL <-summary(regression_AAPL)$ coefficients[,1][1]
plot(resid(regression_NVDA))
t<-c(1:985)
plot(ret_NVDA ~ t,bty="l",pch=20)
regression_NVDA<-lm(ret_NVDA ~ t)
t<-c(1:985)
plot(ret_NVDA ~ t,bty="l",pch=20)
regression_NVDA<-lm(ret_NVDA ~ t)
residuals(regression_NVDA)
runApp()
runApp()
predicted(regression_NVDA)
predict(regression_NVDA)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
re
regression_NVDA.fitted
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
regression_NVDA.resid
runApp()
runApp()
runApp()
runApp()
resid(regression_NVDA)
resid(fortify(regression_NVDA))
runApp()
fit <- regression_NVDA
res <- qplot(fitted(fit), resid(fit))
res+geom_hline(yintercept=0)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
a<-[1,2]
a=[1,2]
data <- read_csv('long_return.csv')
stock1<-'GOOG'
stock1
get(stock1)
get(data$stock1)
data$stock1
data${stock1}
assign(stock1)
exec(stock1)
eval(stock1)
data$eval(stock1)
data$(stock1)
$stock1
data$stock1
stock1
(stock1)
data$(stock1)
get(data,stock1)
get_all_vars(data,stock1)
(a)
(stock1)
$stock1
{{stock1}}
data${{stock1}}
data{{stock1}}
data[stock1]
runApp()
runApp()
runApp()
data[stock1]
length(resid(regression_NVDA))
plot(ret_NVDA ~ ret_MSFT,bty="l",pch=20)
regression_NVDA_MSFT<-lm(ret_NVDA ~ ret_MSFT)
length(resid(regression_NVDA_MSFT))
runApp()
fit <- lm(get('GOOG') ~ get('NVDA'), data = data)
RESID(FIT)
length(resid(fit))
data['GOOG']
plot(resid(fit), data[stock1],main="Residuals",xlab = "Stock1",ylab = "Residuals")
plot(resid(fit), data$GOOG,main="Residuals",xlab = "Stock1",ylab = "Residuals")
stock1
data[stock1]
length(data[stock1])
get(data[stock1])
data[stock1]
(data[stock1])
s1=data[stock1]
s1
length(s1)
data[stock1].valueClassTest()
type(data[stock1])
mode(data[stock1])
ls(data[stock1])
ls(data['GOOG'])
ls(data)
sqldf
install.sqldf
install.packages(sqldf)
install.packages(sqldf)
with(data, data.frame(stock1))
runApp()
data%>%>select(stock1)
data%>%select(stock1)
s1<-data%>%select(stock1)
length(s1)
s1 <- melt(s1)
s1
melt(s1)
length(melt(s1))
ls(melt(s1))
s1 <- data %>%
select(stock1) %>%
unlist(use.names = F)
s1
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
fit <- lm(get('NVDA'),get('GOOG'),data=data)
fit <- lm(get('MFST'),get('GOOG'),data=data)
fit <- lm(get('MSFT'),get('GOOG'),data=data)
data
fit <- lm(get(MSFT),get('GOOG'),data=data)
fit <- lm(get('MSFT') ~ get('GOOG'),data=data)
resid(fit)
stock1<- 'GOOG'
s1 <- data %>%
select(stock1) %>%
unlist(use.names = F)
s1
plot(s1,resid(fit))
plot(s1, resid(fit))
plot(s1, resid(fit))
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
